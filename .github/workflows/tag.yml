on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          rm -rf vendor/
          go mod vendor
          go mod verify

      - name: Build release
        run: VERSION=${{ github.ref }} make release

      - name: Get release changelog
        run: |
          description=$(grep -m 2 -B10000 "##" CHANGELOG.md | grep -v '##')
          echo $description
          description="${description//'%'/'%25'}"
          description="${description//$'\n'/'%0A'}"
          description="${description//$'\r'/'%0D'}" 
          echo "::set-output name=description::$description" 
        id: changelog

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.description }}
          draft: false
          prerelease: false

      - name: Upload windows_amd64 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: windows_amd64.zip
          asset_content_type: application/zip

      - name: Upload windows_386 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: windows_386.zip
          asset_content_type: application/zip
      
      - name: Upload solaris_amd64 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: solaris_amd64.zip
          asset_content_type: application/zip
      
      - name: Upload openbsd_amd64 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: openbsd_amd64.zip
          asset_content_type: application/zip
      
      - name: Upload openbsd_386 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: openbsd_386.zip
          asset_content_type: application/zip
      
      - name: Upload linux_arm Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: linux_arm.zip
          asset_content_type: application/zip
      
      - name: Upload linux_amd64 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: linux_amd64.zip
          asset_content_type: application/zip
      
      - name: Upload linux_386 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: linux_386.zip
          asset_content_type: application/zip
      
      - name: Upload freebsd_arm Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: freebsd_arm.zip
          asset_content_type: application/zip
      
      - name: Upload freebsd_amd64 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: freebsd_amd64.zip
          asset_content_type: application/zip
      
      - name: Upload freebsd_386 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: freebsd_386.zip
          asset_content_type: application/zip
      
      - name: Upload darwin_amd64 Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/windows_amd64.zip
          asset_name: darwin_amd64.zip
          asset_content_type: application/zip